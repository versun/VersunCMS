<%= render 'admin/admin_bar' %>
<h3>CrossPost Settings</h3>
<fieldset>
  <legend><h4>Mastodon</h4></legend>
  <p class="text-muted">Get credentials: Open Mastodon -> Preferences -> Development -> New application | Scope: profile,write:statuses</p>
  <%= form_with(model: @mastodon, url: crosspost_path(@mastodon.platform), method: :patch) do |f| %>
    <%= f.hidden_field :platform, value: 'mastodon' %>
    
    <div class="form-group">
      <%= f.label :enabled, "Enable Mastodon CrossPost" %>
      <%= f.check_box :enabled %>
    </div>

    <div class="form-group">
      <%= f.label :server_url, "Mastodon Server URL" %>
      <%= f.text_field :server_url, placeholder: "https://mastodon.social" %>
    </div>

    <div class="form-group">
      <%= f.label :client_id, "Client key" %>
      <%= f.text_field :client_id %>
    </div>

    <div class="form-group">
      <%= f.label :client_secret, "Client Secret" %>
      <%= f.text_field :client_secret %>
    </div>

    <div class="form-group">
      <%= f.label :access_token, "Access Token" %>
      <%= f.text_field :access_token %>
    </div>

    <div class="form-actions">
      <%= f.submit "Save", class: 'btn btn-primary' %>
      <%= button_tag "Verify", type: 'button', class: 'btn btn-secondary verify-btn', data: { platform: 'mastodon' } %>
    </div>
  <% end %>
</fieldset>

<fieldset>
  <legend><h4>X</h4></legend>
  <p class="text-muted">First, obtain X credentials from <a href="https://developer.x.com">https://developer.x.com</a>.</p>
  <%= form_with(model: @twitter, url: crosspost_path(@twitter.platform), method: :patch) do |f| %>
    <%= f.hidden_field :platform, value: 'twitter' %>
    
    <div class="form-group">
      <%= f.label :enabled, "Enable X CrossPost" %>
      <%= f.check_box :enabled %>
    </div>

    <div class="form-group">
      <%= f.label :access_token, "Access Token" %>
      <%= f.text_field :access_token %>
    </div>

    <div class="form-group">
      <%= f.label :access_token_secret, "Access Token Secret" %>
      <%= f.text_field :access_token_secret %>
    </div>

    <div class="form-group">
      <%= f.label :client_id, "API Key" %>
      <%= f.text_field :client_id %>
    </div>

    <div class="form-group">
      <%= f.label :client_secret, "API Key Secret" %>
      <%= f.text_field :client_secret %>
    </div>

    <div class="form-actions">
      <%= f.submit "Save", class: 'btn btn-primary' %>
      <%= button_tag "Verify", type: 'button', class: 'btn btn-secondary verify-btn', data: { platform: 'twitter' } %>
    </div>
  <% end %>
</fieldset>

<fieldset>
  <legend><h4>Bluesky</h4></legend>
  <p class="text-muted">Get credentials: Log in to your Bluesky account and generate an App Password in settings.</p>
  <%= form_with(model: @bluesky, url: crosspost_path(@bluesky.platform), method: :patch) do |f| %>
    <%= f.hidden_field :platform, value: 'bluesky' %>

    <div class="form-group">
      <%= f.label :enabled, "Enable Bluesky CrossPost" %>
      <%= f.check_box :enabled %>
    </div>

    <div class="form-group">
      <%= f.label :access_token, "Username" %>
      <%= f.text_field :access_token, placeholder: "your.handle" %>
    </div>

    <div class="form-group">
      <%= f.label :access_token_secret, "App Password" %>
      <%= f.text_field :access_token_secret %>
    </div>

    <div class="form-group">
      <%= f.label :server_url, "Server URL" %>
      <%= f.text_field :server_url, placeholder: "https://bsky.social/xrpc" %>
    </div>

    <div class="form-actions">
      <%= f.submit "Save", class: 'btn btn-primary' %>
      <%= button_tag "Verify", type: 'button', class: 'btn btn-secondary verify-btn', data: { platform: 'bluesky' } %>
    </div>
  <% end %>
</fieldset>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const verifyButtons = document.querySelectorAll('.verify-btn');
  
  verifyButtons.forEach(button => {
    button.addEventListener('click', function() {
      const platform = this.dataset.platform;
      const form = this.closest('form');
      const formData = new FormData(form);
      const button = this;
      
      // Convert FormData to JSON object
      const jsonData = {};
      formData.forEach((value, key) => {
        if (key.startsWith('crosspost')) {
          const cleanKey = key.replace('crosspost[', '').replace(']', '');
          jsonData[cleanKey] = value;
        }
      });
      
      // Disable button and show loading state
      button.disabled = true;
      const originalText = button.innerHTML;
      button.innerHTML = 'Verifying...';
      
      fetch(`/crossposts/${platform}/verify`, {
        method: 'POST',
        body: JSON.stringify({ crosspost: jsonData }),
        headers: {
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content,
          'Content-Type': 'application/json'
        },
        credentials: 'same-origin'
      })
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        if (data.status === 'success') {
          alert(data.message);
        } else {
          alert(data.message);
        }
      })
      .catch(error => {
        alert('An error occurred during verification.');
        console.error('Error:', error);
      })
      .finally(() => {
        // Re-enable button and restore original text
        button.disabled = false;
        button.innerHTML = originalText;
      });
    });
  });
});
</script>